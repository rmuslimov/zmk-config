/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    combos {
        compatible = "zmk,combos";
        tilde_esc {
            timeout-ms = <3000>;
            key-positions = <0 45>;
	    layers = <0>;
            bindings = <&kp TILDE>;
        };
        grave_esc {
            timeout-ms = <3000>;
            key-positions = <0 46>;
	    layers = <0>;
            bindings = <&kp GRAVE>;
        };
    };
    behaviors {
        bhm: balanced_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <230>;    // <---[[moderate duration]]
            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
    };

	keymap {
		compatible = "zmk,keymap";

		default_layer {
// ------------------------------------------------------------------------------------------------------------
// |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   bspc     |
// |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -        |
// |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '        |
// | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | rctrl(ret) |
//                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |
			bindings = <
&kp ESC   &kp N1      &kp N2       &kp N3         &kp N4        &kp N5                     &kp N6 &kp N7         &kp N8          &kp N9         &kp N0          &kp BSPC
&kp TAB   &kp Q       &kp W        &kp E          &kp R         &kp T                      &kp Y  &kp U          &kp I           &kp O          &kp P           &kp MINUS
&kp LSHFT &bhm LALT A  &bhm LCTRL S  &bhm LSHFT D    &bhm LGUI F    &kp G                  &kp H  &bhm RGUI J    &bhm RSHFT K    &bhm RCTRL L   &bhm RALT SEMI  &kp SQT
&kp LCTRL &kp Z       &kp X        &kp C          &lt 3 V         &kp B  &kp LBKT   &kp RBKT &kp N  &kp M         &kp COMMA      &kp DOT        &kp FSLH        &kp RET
                                   &kp LALT       &kp LGUI      &mo 1  &kp SPACE  &lt 2 RET  &mo 2  &kp BSPC      &kp DEL
			>;

			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
		};

		lower_layer {

// |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *   |  (   |   )  |  BKSC |
// |       |     |     |      |  /   |  |   |                   |  *   |  7    |  8   |  9   |  -   |   _   |
// |       |     |     |      |  [   |  ]   |                   |  +   |  4    |  5   |  6   |  +   |       |
// |       |     |  {  |  }   |  (   |  )   |        |  |       |  0   |  1    |  2   |  3   |  /   |       |
//                     |      |      |      |        |  |   =   |  CP  |  .    |   =  |
			bindings = <
&bt BT_CLR &bt BT_SEL 0  &bt BT_SEL 1       &bt BT_SEL 2    &bt BT_SEL 3       &bt BT_SEL 4                    &kp CARET          &kp AMPS    &kp KP_MULTIPLY    &kp LPAR    &kp RPAR    &trans
&trans  &trans           &trans             &trans          &kp BSLH           &kp PIPE                        &kp KP_MULTIPLY    &kp N7      &kp N8             &kp N9      &kp MINUS   &kp UNDERSCORE
&trans  &bhm LALT TILDE  &trans    	    &trans          &bhm LGUI LBKT     &kp RBKT                        &kp KP_PLUS        &kp N4      &kp N5             &kp N6      &kp PLUS    &trans
&trans  &kp GRAVE           &kp LBRC        &kp RBRC        &kp LPAR           &kp RPAR  &trans     &trans     &kp N0             &kp N1      &kp N2             &kp N3      &trans      &trans
                                &trans      &trans       &trans    &kp SPACE  &kp EQUAL    &caps_word         &kp DOT     &trans
			>;

			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
		};

		raise_layer {
			bindings = <
&trans    &kp F1           &kp F2            &kp F3          &kp F4           &kp F5                           &kp F6        &kp F7           &kp F8          &kp F9        &kp F10     &kp F11
&trans    &trans           &trans            &trans          &kp HOME         &kp PG_UP                        &kp PG_UP     &kp HOME         &kp UP          &kp END       &kp F12     &trans
&trans    &bhm LALT A	   &trans            &trans          &trans           &kp PG_DN                        &kp PG_DN     &kp LEFT         &kp DOWN        &kp RIGHT     &kp SEMI    &kp DQT
&trans    &trans           &trans            &trans          &trans           &trans      &trans     &trans    &kp BACKSLASH &trans           &kp LT          &kp GT        &kp QMARK   &trans
                                &trans      &trans       &caps_word                            &kp SPACE  &kp RET   &trans        &trans     &trans
			>;

			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
		};

		brackets_layer {
			bindings = <
&out OUT_TOG   &out OUT_BLE   &out OUT_USB   &trans   &reset   &bootloader                &bootloader   &reset   &trans   &trans   &trans   &trans
&trans   &trans   &trans   &trans   &ext_power EP_ON   &ext_power EP_OFF                     &trans        &kp LBKT &kp RBKT &trans   &trans   &trans
&trans   &trans   &trans   &trans   &trans   &trans                     &trans        &kp LPAR &kp RPAR &trans   &trans   &trans
&trans   &trans   &trans   &trans   &trans   &trans   &trans   &trans   &trans        &kp LBRC &kp RBRC &trans   &trans   &trans
                                    &trans   &trans   &trans   &trans   &trans   &trans        &trans   &trans
			>;

			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
		};

	};
};
